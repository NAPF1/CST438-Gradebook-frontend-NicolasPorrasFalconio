{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nporr\\\\frontend\\\\src\\\\components\\\\Assignment.js\";\nimport React from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport Button from '@mui/material/Button';\nimport Radio from '@mui/material/Radio';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { SERVER_URL } from '../constants.js'; // NOTE:  for OAuth security, http request must have\n//   credentials: 'include' \n//\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Assignment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchAssignments = () => {\n      console.log(\"Assignment.fetchAssignments\");\n      const token = Cookies.get('XSRF-TOKEN');\n      fetch(`${SERVER_URL}/gradebook`, {\n        method: 'GET',\n        headers: {\n          'X-XSRF-TOKEN': token\n        }\n      }).then(response => response.json()).then(responseData => {\n        if (Array.isArray(responseData.assignments)) {\n          //  add to each assignment an \"id\"  This is required by DataGrid  \"id\" is the row index in the data grid table \n          this.setState({\n            assignments: responseData.assignments.map((assignment, index) => ({\n              id: index,\n              ...assignment\n            }))\n          });\n        } else {\n          toast.error(\"Fetch failed.\", {\n            position: toast.POSITION.BOTTOM_LEFT\n          });\n        }\n      }).catch(err => console.error(err));\n    };\n\n    this.onRadioClick = event => {\n      console.log(\"Assignment.onRadioClick \" + event.target.value);\n      this.setState({\n        selected: event.target.value\n      });\n    };\n\n    this.state = {\n      selected: 0,\n      assignments: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAssignments();\n  }\n\n  render() {\n    const columns = [{\n      field: 'assignmentName',\n      headerName: 'Assignment',\n      width: 400,\n      renderCell: params => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Radio, {\n          checked: params.row.id === this.state.selected,\n          onChange: this.onRadioClick,\n          value: params.row.id,\n          color: \"default\",\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), params.value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, {\n      field: 'courseId',\n      headerName: 'Course Id',\n      width: 200\n    }, {\n      field: 'courseTitle',\n      headerName: 'Course',\n      width: 300\n    }, {\n      field: 'dueDate',\n      headerName: 'Due Date',\n      width: 200\n    }];\n    const assignmentSelected = this.state.assignments[this.state.selected];\n    console.log(assignmentSelected[3]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      align: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Assignment(s) ready to grade: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 450,\n          width: '100%',\n          align: \"left\"\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: this.state.assignments,\n          columns: columns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        component: Link,\n        to: {\n          pathname: '/gradebook',\n          assignment: assignmentSelected\n        },\n        variant: \"outlined\",\n        color: \"primary\",\n        disabled: this.state.assignments.length === 0,\n        style: {\n          margin: 10\n        },\n        children: \"Grade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        autoClose: 1500\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default Assignment;","map":{"version":3,"sources":["C:/Users/nporr/frontend/src/components/Assignment.js"],"names":["React","ToastContainer","toast","Link","Cookies","Button","Radio","DataGrid","SERVER_URL","Assignment","Component","constructor","props","fetchAssignments","console","log","token","get","fetch","method","headers","then","response","json","responseData","Array","isArray","assignments","setState","map","assignment","index","id","error","position","POSITION","BOTTOM_LEFT","catch","err","onRadioClick","event","target","value","selected","state","componentDidMount","render","columns","field","headerName","width","renderCell","params","row","assignmentSelected","height","align","pathname","length","margin"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link } from 'react-router-dom'\r\nimport Cookies from 'js-cookie';\r\nimport Button from '@mui/material/Button';\r\nimport Radio from '@mui/material/Radio';\r\nimport {DataGrid} from '@mui/x-data-grid';\r\nimport {SERVER_URL} from '../constants.js'\r\n\r\n// NOTE:  for OAuth security, http request must have\r\n//   credentials: 'include' \r\n//\r\n\r\nclass Assignment extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {selected: 0, assignments: []};\r\n    };\r\n \r\n   componentDidMount() {\r\n    this.fetchAssignments();\r\n  }\r\n \r\n  fetchAssignments = () => {\r\n    console.log(\"Assignment.fetchAssignments\");\r\n    const token = Cookies.get('XSRF-TOKEN');\r\n    fetch(`${SERVER_URL}/gradebook`, \r\n      {  \r\n        method: 'GET', \r\n        headers: { 'X-XSRF-TOKEN': token }\r\n      } )\r\n    .then((response) => response.json()) \r\n    .then((responseData) => { \r\n      if (Array.isArray(responseData.assignments)) {\r\n        //  add to each assignment an \"id\"  This is required by DataGrid  \"id\" is the row index in the data grid table \r\n        this.setState({ assignments: responseData.assignments.map((assignment, index) => ( { id: index, ...assignment } )) });\r\n      } else {\r\n        toast.error(\"Fetch failed.\", {\r\n          position: toast.POSITION.BOTTOM_LEFT\r\n        });\r\n      }        \r\n    })\r\n    .catch(err => console.error(err)); \r\n  }\r\n  \r\n   onRadioClick = (event) => {\r\n    console.log(\"Assignment.onRadioClick \" + event.target.value);\r\n    this.setState({selected: event.target.value});\r\n  }\r\n  \r\n  render() {\r\n     const columns = [\r\n      {\r\n        field: 'assignmentName',\r\n        headerName: 'Assignment',\r\n        width: 400,\r\n        renderCell: (params) => (\r\n          <div>\r\n          <Radio\r\n            checked={params.row.id === this.state.selected}\r\n            onChange={this.onRadioClick}\r\n            value={params.row.id}\r\n            color=\"default\"\r\n            size=\"small\"\r\n          />\r\n          {params.value}\r\n          </div>\r\n        )\r\n      },\r\n      { field: 'courseId', headerName: 'Course Id', width: 200 },\r\n      { field: 'courseTitle', headerName: 'Course', width: 300 },\r\n      { field: 'dueDate', headerName: 'Due Date', width: 200 }\r\n      ];\r\n      \r\n      const assignmentSelected = this.state.assignments[this.state.selected];\r\n      console.log(assignmentSelected[3]);\r\n\r\n      return (\r\n          <div align=\"left\" >\r\n            <h4>Assignment(s) ready to grade: </h4>\r\n              <div style={{ height: 450, width: '100%', align:\"left\"   }}>\r\n                <DataGrid rows={this.state.assignments} columns={columns} />\r\n              </div>                \r\n            <Button component={Link} to={{pathname:'/gradebook', assignment: assignmentSelected}} \r\n                    variant=\"outlined\" color=\"primary\" disabled={this.state.assignments.length===0}  style={{margin: 10}}>\r\n              Grade\r\n            </Button>\r\n            \r\n            {/* <Button component={Link} to={{pathname:`/course/${assignmentSelected.courseId}`, assignment: assignmentSelected}} \r\n                    variant=\"outlined\" color=\"primary\" disabled={this.state.assignments.length===0}  style={{margin: 10}}>\r\n              Go to Course\r\n            </Button> */}\r\n            <ToastContainer autoClose={1500} /> \r\n          </div>\r\n      )\r\n  }\r\n}  \r\n\r\nexport default Assignment;"]},"metadata":{},"sourceType":"module"}