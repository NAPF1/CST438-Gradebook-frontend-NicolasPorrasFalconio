{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nporr\\\\frontend\\\\src\\\\components\\\\newAssignment.js\";\nimport React from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport Button from '@mui/material/Button';\nimport Radio from '@mui/material/Radio';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { SERVER_URL } from '../constants.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass newAssignment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSave = () => {\n      console.log(\"newAssignment.handleSave\");\n      const token = Cookies.get('XSRF-TOKEN');\n      const name = document.getElementById(name);\n      const dueDate = document.getElementById(dueDate);\n      const courseId = document.getElementById(courseId);\n      this.setState({\n        assignment: {\n          name: name,\n          dueDate: dueDate,\n          courseId: courseId\n        }\n      });\n      fetch(`${SERVER_URL}/course/${courseId}/assignment`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-XSRF-TOKEN': token\n        },\n        body: JSON.stringify({\n          assignmentName: this.state.assignment.name,\n          dueDate: this.state.assignment.dueDate,\n          courseId: this.state.assignment.courseId\n        })\n      }).then(res => {\n        if (res.ok) {\n          toast.success(\"Assignment created.\", {\n            position: toast.POSITION.BOTTOM_LEFT\n          }); // Go back to assignment.js?\n        } else {\n          toast.error(\"Unable to add assignment\", {\n            position: toast.POSITION.BOTTOM_LEFT\n          });\n        }\n      });\n    };\n\n    this.state = {\n      assignmentName: \"\",\n      dueDate: \"\",\n      courseId: \"\"\n    };\n  } // Saves the new assignment \n\n\n  render() {\n    const columns = [{\n      field: 'name',\n      headerName: 'Name',\n      width: 250,\n      editable: true\n    }, {\n      field: 'dueDate',\n      headerName: 'Due Date',\n      width: 250,\n      editable: true\n    }, {\n      field: 'courseId',\n      headerName: 'Course Id',\n      width: 150,\n      editable: true\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      align: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"New Assignment:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"assignmentName\",\n          value: this.state.assignmentName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Due Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"dueDate\",\n          value: this.state.dueDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Course Id:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"courseId\",\n          value: this.state.courseId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        autoClose: 1500\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default newAssignment;\n{\n  /* <div style={{ height: 400, width: '100%' }}>\r\n                 <DataGrid rows={this.state} columns={columns} onCellEditCommit={this.handleCellEditCommit}  />\r\n                 <Button id=\"Save\" variant=\"outlined\" color=\"primary\" style={{margin: 10}} onClick={this.handleSave} >\r\n                    Save\r\n                 </Button>\r\n               </div> */\n}","map":{"version":3,"sources":["C:/Users/nporr/frontend/src/components/newAssignment.js"],"names":["React","ToastContainer","toast","Link","Cookies","Button","Radio","DataGrid","SERVER_URL","newAssignment","Component","constructor","props","handleSave","console","log","token","get","name","document","getElementById","dueDate","courseId","setState","assignment","fetch","method","headers","body","JSON","stringify","assignmentName","state","then","res","ok","success","position","POSITION","BOTTOM_LEFT","error","render","columns","field","headerName","width","editable","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link } from 'react-router-dom'\r\nimport Cookies from 'js-cookie';\r\nimport Button from '@mui/material/Button';\r\nimport Radio from '@mui/material/Radio';\r\nimport {DataGrid} from '@mui/x-data-grid';\r\nimport {SERVER_URL} from '../constants.js'\r\n\r\nclass newAssignment extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {assignmentName: \"\", dueDate: \"\", courseId: \"\" };\r\n    }\r\n\r\n    // Saves the new assignment \r\n    handleSave = () => {\r\n        console.log(\"newAssignment.handleSave\");\r\n        const token = Cookies.get('XSRF-TOKEN');\r\n\r\n        const name = document.getElementById(name);\r\n        const dueDate = document.getElementById(dueDate);\r\n        const courseId = document.getElementById(courseId);\r\n        this.setState({assignment:{ name: name, dueDate: dueDate, courseId: courseId }});\r\n\r\n        fetch(`${SERVER_URL}/course/${courseId}/assignment`, {\r\n            method: 'POST', \r\n            headers: { 'Content-Type': 'application/json',\r\n                       'X-XSRF-TOKEN': token }, \r\n            body: JSON.stringify({\r\n                assignmentName: this.state.assignment.name,\r\n                dueDate: this.state.assignment.dueDate,\r\n                courseId: this.state.assignment.courseId })\r\n        }).then(res => \r\n            {\r\n                if (res.ok) {\r\n                    toast.success(\"Assignment created.\", {\r\n                        position: toast.POSITION.BOTTOM_LEFT\r\n                    });\r\n                    // Go back to assignment.js?\r\n                } else {\r\n                    toast.error(\"Unable to add assignment\", {\r\n                        position: toast.POSITION.BOTTOM_LEFT\r\n                    });\r\n                }\r\n            })\r\n    };\r\n\r\n    render() {\r\n        const columns = [\r\n            { field: 'name', headerName: 'Name', width: 250, editable:true},\r\n            { field: 'dueDate', headerName: 'Due Date', width: 250, editable:true},\r\n            { field: 'courseId', headerName: 'Course Id', width: 150 , editable:true}\r\n            ];\r\n          \r\n        return(\r\n            <div align=\"left\" >\r\n                <h3>New Assignment:</h3>\r\n                <form onSubmit={this.handleSubmit}>\r\n                <br></br>\r\n                    <label>Name:</label>\r\n                    <input type=\"text\" name=\"assignmentName\" value={this.state.assignmentName}></input>\r\n                    <br></br>\r\n                    <label>Due Date:</label>\r\n                    <input type=\"text\"  name=\"dueDate\" value={this.state.dueDate}></input>\r\n                    <br></br>\r\n                    <label>Course Id:</label>\r\n                    <input type=\"text\"  name=\"courseId\" value={this.state.courseId}></input>\r\n                    <br></br>\r\n                    <input type='submit' value='submit'></input>\r\n                </form>\r\n                <ToastContainer autoClose={1500} />   \r\n            </div>\r\n        ); \r\n    };\r\n}\r\n\r\nexport default newAssignment;\r\n\r\n{/* <div style={{ height: 400, width: '100%' }}>\r\n                <DataGrid rows={this.state} columns={columns} onCellEditCommit={this.handleCellEditCommit}  />\r\n                <Button id=\"Save\" variant=\"outlined\" color=\"primary\" style={{margin: 10}} onClick={this.handleSave} >\r\n                   Save\r\n                </Button>\r\n              </div> */}"]},"metadata":{},"sourceType":"module"}